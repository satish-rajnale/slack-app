{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOptions.js","components/Sidebar.js","components/ChatInput.js","components/Messages.js","components/Chat.js","components/LogIn.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","Sidebaroptions","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","SidebarOptions","InsertComment","Inbox","Drafts","BookmarkBorder","PeopleAlt","Apps","FileCopy","ExpandLess","ExpandMore","Add","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImg","current","scrollIntoView","behavior","Message","console","log","extractedTime","Date","toDate","toUTCString","toLowerCase","split","slice","toString","replace","MessageContainer","MessageInfo","undefined","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessage","loading","useEffect","ChatContainer","InfoOutlined","ChatMessages","Messages","ChatBottom","ref","LogIn","LogInContainer","LogInIneerContainer","signInWithPopup","catch","error","alert","App","AppLoading","ApploadingContents","color","fadeIn","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.211b56b0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDFuXtua5oQ10YHTySgJD6KmE3kB8L8eg4\",\r\n    authDomain: \"slack-clone-app-f007e.firebaseapp.com\",\r\n    projectId: \"slack-clone-app-f007e\",\r\n    storageBucket: \"slack-clone-app-f007e.appspot.com\",\r\n    messagingSenderId: \"467913579620\",\r\n    appId: \"1:467913579620:web:05984997a34b28034f1371\"\r\n  };\r\n  \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport { auth, provider, db};","import React from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { auth } from \"../firebase\";\r\nimport {useAuthState} from 'react-firebase-hooks/auth';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\nconst [user] = useAuthState(auth);\r\n\r\n\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      {/*  Header left*/}\r\n      <HeaderLeft>\r\n        <HeaderAvatar \r\n        onClick={()=>auth.signOut()}\r\n        alt={user?.displayName}\r\n        src={user?.photoURL}\r\n        />\r\n        <AccessTimeIcon/>\r\n      </HeaderLeft>\r\n\r\n      {/*  Header search*/}\r\n      <HeaderSearch>\r\n       \r\n       <input placeholder=\"Search here...\"/>\r\n       <SearchIcon/>\r\n      </HeaderSearch>\r\n      {/*  Header right*/}\r\n      <HeaderRight>\r\n       <HelpOutlineIcon/>\r\n       </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.div`\r\n margin:0;\r\n  display:flex;\r\n  background-color: #4A154B;\r\n  width:100%;\r\n  position:fixed;\r\n  align-items:center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  color:white;\r\n\r\n`;\r\nconst HeaderLeft = styled.div`\r\nflex: 0.3;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-left:20px;\r\n\r\n>.MuiSvgIcon-root{\r\n  margin-left:auto;\r\n  margin-right:30px;\r\n}\r\n`;\r\nconst HeaderSearch = styled.div`\r\n  display:flex;\r\n  flex:0.4;\r\n  color:gray;\r\n \r\n  border-radius:6px;\r\n  padding: 0 50px;\r\n  border: 1px gray solid;\r\n\r\n>input{\r\n  background-color:transparent;\r\n  border:none;\r\n  text-align:left;\r\n  min-width:30vw;\r\n  outline:0;\r\n  color:white;\r\n}\r\n\r\n`;\r\nconst HeaderRight = styled.div`\r\n  \r\n  flex:0.3;\r\n  color:white;\r\n  display:flex;\r\n  align-items:flex-end;\r\n>.MuiSvgIcon-root{\r\n  margin-left:auto;\r\n margin-right:20px;\r\n} \r\n`;\r\nconst HeaderAvatar = styled(Avatar)`\r\n\r\n:hover{\r\n  cursor: pointer;\r\n  opacity: 0.9;\r\n}\r\n\r\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {enterRoom } = appSlice.actions;\r\n\r\n\r\n\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { enterRoom } from '../features/appSlice';\r\nimport { db } from '../firebase';\r\nimport { useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\nfunction Sidebaroptions({Icon, title, addChannelOption, id}) {\r\n    const dispatch = useDispatch();\r\n    \r\n  const addChannel = () => {\r\n        const channelName = prompt('please add channel');\r\n\r\n        if(channelName) {\r\n            db.collection(\"rooms\").add({\r\n                name: channelName,\r\n            })\r\n        }\r\n    };\r\n    const selectChannel = () => {\r\n        if(id){\r\n            dispatch(enterRoom({\r\n                roomId:id\r\n            }));\r\n            \r\n        }\r\n    };\r\n\r\n    return (\r\n        <SidebarOptionContainer\r\n            onClick={addChannelOption ? addChannel : selectChannel}\r\n        >\r\n            {Icon && <Icon fontSize=\"small\" style={{padding:10}} />}\r\n\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ) : (\r\n                <SidebarOptionChannel >\r\n                    <span>#</span>{title}\r\n                </SidebarOptionChannel>\r\n            )}\r\n        </SidebarOptionContainer>\r\n    );\r\n}\r\n\r\nexport default Sidebaroptions;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SidebarOptionContainer= styled.div`\r\ndisplay:flex;\r\nfont-size:12px;\r\nalign-items:center;\r\npadding-left:2px;\r\ncursor:pointer;\r\n\r\n\r\n:hover{\r\n    opacity:0.9;\r\n    background-color: #340e36;\r\n}\r\n>h3{\r\n    font-weight:500;\r\n}\r\n> h3 > span{\r\n    padding:15px;\r\n}`;\r\n\r\nconst SidebarOptionChannel= styled.h3`\r\n    padding:10px 0 ;\r\n    font-weight:500;\r\n  \r\n`;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport { Add, Apps, BookmarkBorder, Drafts, ExpandLess, ExpandMore, FileCopy, Inbox, InsertComment, PeopleAlt } from '@material-ui/icons';\r\nimport {useCollection} from 'react-firebase-hooks/firestore';\r\nimport {db} from '../firebase';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\r\n    \r\n    return (\r\n        <SidebarContainer>\r\n            <SidebarHeader>\r\n                <SidebarInfo>\r\n                    <h2>Anime FAM HQ</h2>\r\n                    <h3>\r\n                        <FiberManualRecordIcon/>\r\n                        NB 117\r\n                    </h3>\r\n                </SidebarInfo>\r\n                <CreateIcon/>\r\n                {/* <SvgIcon style={{height:\"16px\",viewBox:\"0 0 20 20\", }}{...props}>\r\n               <path d=\"M8.66000142,13.3899994 L10.3700017,12.6999993 C10.8700018,12.4999993 11.3300019,12.1999992 11.7100019,11.8199992 L19.5600032,3.96999786 C20.1900033,3.33999776 20.0600033,2.19999757 19.2800032,1.41999745 L18.570003,0.70999733 C17.7900029,-0.070002798 16.6500027,-0.190002818 16.0300026,0.429997284 L8.22000135,8.23999856 C7.81000128,8.64999863 7.49000123,9.13999871 7.29000119,9.6899988 L6.65000109,11.4199991 C6.120001,12.7599993 7.29000119,13.9099995 8.66000142,13.3899994 Z M14.4200024,18.9999974 C16.8700028,18.9999974 19.0000002,16.96 19.0000002,14.4199996 L19.0000002,8.49999738 C19.0000002,7.34999842 17.5000002,7.34999842 17.5000002,8.49999738 L17.5000002,14.1199995 C17.5000002,16.1099999 16.1100026,17.4999974 14.1200023,17.4999974 L5.88000096,17.4999974 C3.89000064,17.4999974 2.50000016,16.1099999 2.50000016,14.1199995 L2.50000016,5.87999818 C2.50000016,3.88999785 3.89000064,2.49999738 5.88000096,2.49999738 L11.5000002,2.49999738 C12.6900021,2.49999738 12.6800021,0.999997377 11.5000002,0.999997377 L5.58000091,0.999997377 C3.0300005,0.999997377 1.00000016,3.03999771 1.00000016,5.57999813 L1.00000016,14.4199996 C1.00000016,16.96 3.0300005,18.9999974 5.58000091,18.9999974 L14.4200024,18.9999974 Z M17.2100028,4.1899979 L15.8000026,2.76999767 L16.9500028,1.61999748 C17.0600028,1.50999746 17.3300028,1.54999747 17.5200029,1.7499975 L18.230003,2.45999762 C18.430003,2.65999765 18.470003,2.92999769 18.370003,3.01999771 L17.2100028,4.1899979 Z M7.98000131,12.0499992 L8.67000142,10.1099989 C8.75000143,9.88999883 8.86000145,9.71999881 9.02000148,9.54999878 L14.7300024,3.83999784 L16.1400026,5.24999807 L10.4300017,10.989999 C10.2500017,11.159999 10.0900017,11.2599991 9.90000162,11.3299991 L8.00000131,12.0699992 C7.98000131,12.0799992 7.97000131,12.0699992 7.98000131,12.0499992 Z\" id=\"compose-dm\" fill-rule=\"nonzero\"></path>\r\n                        </SvgIcon> */}\r\n            </SidebarHeader>\r\n\r\n            <SidebarOptions Icon={InsertComment}  title=\"Threads\"/>\r\n            <SidebarOptions Icon={Inbox}  title=\"Mentions & Reactions\"/>  \r\n            <SidebarOptions Icon={Drafts}  title=\"Saved Items\"/>            \r\n            <SidebarOptions Icon={BookmarkBorder}  title=\"Channel Browser\"/>  \r\n            <SidebarOptions Icon={PeopleAlt}  title=\"People & user Groups\"/>  \r\n            <SidebarOptions Icon={Apps}  title=\"Apps\"/> \r\n            <SidebarOptions Icon={FileCopy}  title=\"File Browser\"/>  \r\n            <SidebarOptions Icon={ExpandLess}  title=\"Show Less\"/>   \r\n            <hr/>\r\n            <SidebarOptions Icon={ExpandMore}  title=\"Channels\"/>   \r\n            <hr/>\r\n            <SidebarOptions Icon={Add} addChannelOption title=\"Add Channel\"/>   \r\n            {\r\n                channels?.docs.map((doc) => (\r\n                    <SidebarOptions \r\n                    key={doc.id}\r\n                    id={doc.id}\r\n                   \r\n                    title={doc.data().name} /> \r\n                ))\r\n             }\r\n             \r\n        </SidebarContainer>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n\r\nconst SidebarContainer  = styled.div`\r\nbackground-color:#4A154B;;\r\ncolor:white;\r\nflex:0.3;\r\nborder-top: 1px solid #492746;\r\nmargin-top: 60px;\r\nmax-width:260px;\r\n\r\nheight:fit-content;\r\n\r\n>hr{\r\n    margin-top:10px;\r\n    margin-bottom:10px;\r\n    border:1px solid #49274b;\r\n}\r\n`;\r\n\r\n\r\nconst SidebarHeader  = styled.div`\r\ndisplay:flex;\r\npadding:13px;\r\nborder-bottom: 1px solid #49274b;\r\n>.MuiSvgIcon-root{\r\n    border-radius:999px;\r\n    padding:8px;\r\n    \r\n    color:#49274b;\r\n    font-size:18px;\r\n    background-color:white;\r\n  \r\n}\r\n`;\r\n\r\n\r\nconst SidebarInfo  = styled.div`\r\nflex:1;\r\n>h2{\r\n    font-size:15px;\r\n    font-weight:900;\r\n    margin-bottom: 5px;\r\n}\r\n>h3{\r\n    display:flex;\r\n    font-size:13px;\r\n    font-weight:400;\r\n    align-items: center;\r\n}\r\n>h3 > .MuiSvgIcon-root{\r\nfont-size:14px;\r\nmargin-top:1px;\r\nmargin-right:2px;\r\ncolor:green;\r\n\r\n}\r\n`;","import { Button } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport {db} from '../firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction ChatInput({channelName, channelId, chatRef}) {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const sendMessage = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(!channelId){\r\n        return false;\r\n    }\r\n\r\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n        message : input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        user: \"Nb117\",\r\n        userImg: \"https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg\"\r\n    });\r\n\r\n \r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: \"smooth\"});\r\n    \r\n    setInput(\"\");\r\n};\r\n\r\n    return (\r\n       <ChatInputContainer>\r\n            <form >\r\n                <input value={input} onChange={e=>setInput(e.target.value)} placeholder={`Message #${channelName}`} />\r\n                <Button hidden type=\"submit\" onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n       </ChatInputContainer>\r\n    )\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst ChatInputContainer = styled.div`\r\nborder-radius:20px;\r\n>form{\r\n    position: relative;\r\n    display:flex;\r\n    justify-content:center;\r\n}\r\n\r\n>form>input{\r\n    position:fixed;\r\n    bottom:20px;\r\n    width:62%;\r\n    border: 1px solid gray;\r\n    padding :20px;\r\n    outline: none;\r\n}\r\n\r\n>form >button{\r\n    display: none !important;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction Message({message, user, timestamp, userImg}) {\r\n    if(timestamp!==null){\r\n        console.log(timestamp)\r\n    var time = new Date(timestamp?.toDate()).toUTCString().toLowerCase()\r\nvar extractedTime = time.split(' ')[4].split(\":\").slice(0,2).toString().replace(\",\", \":\");}\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImg } alt=\"\"/>\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user} :<span>{extractedTime!==undefined ? extractedTime : \"just now\" }</span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\nconst MessageContainer = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\nfont-family: 'Lato', sans-serif;\r\n  font-size: 15px;\r\n  line-height: 1.46668;\r\n  font-weight: 700;\r\npadding:20px;\r\n>img{\r\n    height:40px;\r\n    width:40px;\r\n    border-radius:999px;\r\n}\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\npadding-left:10px;\r\n\r\n>h4{\r\n    color:black;\r\n    font-size:16px;\r\n    font-weight:800;\r\n}\r\n\r\n>h4>span{\r\n    color:gray;\r\n    \r\n    margin-left:4px;\r\n    font-size:14px;\r\n    font-weight:100;\r\n}\r\n>p{\r\n\r\n    font-weight:200;\r\n}\r\n\r\n`;\r\n","import { InfoOutlined, Message, StarBorderOutlined } from '@material-ui/icons';\r\nimport AssistantOutlinedIcon from '@material-ui/icons/AssistantOutlined';\r\nimport React, { useRef , useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { selectRoomId } from '../features/appSlice';\r\nimport ChatInput from './ChatInput';\r\nimport Messages from './Messages';\r\nimport {useCollection, useDocument} from 'react-firebase-hooks/firestore';\r\nimport { db } from '../firebase';\r\n\r\n\r\nfunction Chat() {\r\n\r\nconst chatRef = useRef(null);\r\n\r\nconst roomId = useSelector(selectRoomId);\r\nconst [roomDetails] = useDocument(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n);\r\nconst [roomMessage, loading] = useCollection(\r\n    roomId && \r\n    db\r\n    .collection(\"rooms\")\r\n    .doc(roomId)\r\n    .collection(\"messages\")\r\n    .orderBy(\"timestamp\", \"asc\")\r\n);\r\n \r\nuseEffect(() => {\r\n    chatRef?.current?.scrollIntoView({\r\n        behavior: \"smooth\"\r\n    });\r\n}, [roomId, loading]);\r\n\r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessage && (\r\n                <>\r\n            <Header>\r\n                <HeaderLeft>\r\n                    <h4>#{roomDetails?.data().name}</h4>\r\n                    <AssistantOutlinedIcon/>\r\n                </HeaderLeft>\r\n                <HeaderRight>\r\n                    <p>\r\n                        <InfoOutlined /> Details\r\n                    </p>\r\n                </HeaderRight>\r\n            </Header>\r\n            \r\n\r\n            <ChatMessages>\r\n                {roomMessage?.docs.map((doc) => {\r\n                    const {message, timestamp, user , userImg} = doc.data();\r\n                    if(timestamp!==undefined){\r\n                   return (\r\n                        <Messages\r\n                        key={doc.id}\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        user={user}\r\n                        userImg={userImg}/>\r\n                    )\r\n                   }else{\r\n                       return null;\r\n                   }\r\n                })}\r\n            \r\n                <ChatBottom ref={chatRef}/>\r\n            </ChatMessages>\r\n            <ChatInput chatRef={chatRef} channelName={roomDetails?.data().name} channelId={roomId}/>\r\n            </>\r\n            )}\r\n        </ChatContainer>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\n\r\nconst ChatBottom = styled.div`\r\npadding-bottom:100px;\r\n`;\r\n\r\nconst Header = styled.div`\r\ndisplay:flex;\r\njustify-content: space-between;\r\npadding: 20px;\r\nborder-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    >h4{\r\n        text-transform:lowercase;\r\n        display:flex;\r\n        margin-right:10px;\r\n    }\r\n    > .MuiSvgIcon-root{\r\n        margin-left:8px;\r\n        font-size:22px;\r\n        :hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    > p {\r\n        display:flex;\r\n        align-items:center;\r\n        font-size:14px;\r\n    }\r\n\r\n    > p > .MuiSvgIcon-root{\r\n        margin-right:  5px !important ;\r\n        font-size:20px;\r\n        :hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ChatContainer = styled.div`\r\n    flex:0.7;\r\n    flex-grow:1;\r\n    overflow-y:scroll;\r\n    margin-top:60px;\r\n    height:100%;\r\n`;\r\n\r\nconst ChatMessages = styled.div``;","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { auth, provider } from '../firebase';\r\nfunction LogIn() {\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).catch(error => alert(error.message));\r\n    }\r\n\r\n\r\n    return (\r\n        <LogInContainer>\r\n            <LogInIneerContainer>\r\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\"/>\r\n            \r\n            <h1>Sign In to NB Community</h1>\r\n            <p>NB.slack.com</p>\r\n           \r\n            <Button onClick={signIn}>\r\n                Sign In with Google\r\n            </Button>\r\n            </LogInIneerContainer>\r\n        </LogInContainer>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n\r\n\r\nconst LogInContainer = styled.div`\r\nbackground-color:#f8f8f8;\r\nheight:100vh;\r\ndisplay:grid;\r\nplace-items:center;\r\n`;\r\n\r\nconst LogInIneerContainer = styled.div`\r\npadding:100px;\r\ntext-align:center;\r\nalign-items:center;\r\n\r\nbackground-color:white;\r\nborder-radius:10px;\r\nbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0 ,0,00,0.24);\r\n\r\n\r\n>img {\r\n    object-fit:contain;\r\n    height:100px;\r\n    margin-bottom:30px;\r\n}\r\n\r\n>button {\r\n    margin-top:30px;\r\n    text-transform: inherit !important;\r\n    background-color: #0a8d48 !important;\r\n    color:white;\r\n}\r\n`;","import React from \"react\";\r\nimport Header from \"./components/Header.js\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Sidebar from \"./components/Sidebar.js\"\r\nimport styled from  \"styled-components\";\r\nimport Chat from \"./components/Chat.js\";\r\nimport { auth } from \"./firebase.js\";\r\nimport {useAuthState} from 'react-firebase-hooks/auth';\r\nimport LogIn from \"./components/LogIn.js\";\r\nimport Spinner from 'react-spinkit';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\nconst [user, loading] = useAuthState(auth);\r\n\r\nif(loading){\r\n  return(\r\n    <AppLoading>\r\n      <ApploadingContents>\r\n        <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\"/>\r\n        <Spinner name=\"ball-spin-fade-loader\" \r\n        color=\"purple\" fadeIn=\"none\"\r\n        />     \r\n      </ApploadingContents>\r\n    </AppLoading>\r\n  )\r\n}\r\n  return (\r\n    \r\n    <Router>\r\n      \r\n      {!user ? (<LogIn/>) : \r\n      <> \r\n        <Header />\r\n        <AppBody>\r\n          <Sidebar  />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Chat />\r\n          </Route>\r\n        </Switch>\r\n        </AppBody>\r\n      </>\r\n      }\r\n    \r\n     \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\ndisplay:flex;\r\nheight: 100vh;\r\nfont-family: 'Lato', sans-serif;\r\nfont-size: 15px;\r\n    line-height: 1.46668;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst AppLoading = styled.div`\r\ndisplay:grid;\r\nplace-items:center;\r\nheight:100vh;\r\nwidth:100%;\r\n`;\r\n\r\nconst ApploadingContents = styled.div`\r\ntext-align:center;\r\npadding-bottom:100px;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\n\r\n>img{\r\n  height:100px;\r\n  padding:20px;\r\n  margin-bottom:50px;\r\n}`;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}